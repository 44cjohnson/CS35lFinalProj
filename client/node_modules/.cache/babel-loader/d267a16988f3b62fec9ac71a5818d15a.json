{"ast":null,"code":"import _toConsumableArray from\"/Users/colinjohnson/Desktop/35LFinalProj/CS35lFinalProj/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/colinjohnson/Desktop/35LFinalProj/CS35lFinalProj/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_ITEMS,ADD_ITEM,DELETE_ITEM,ITEMS_LOADING}from\"../actions/types\";var initialState={items:[],loading:false};//DELETE_ITEM adjusts the items in the state of the Exercise List\n//  and filters them so that if the item id is not equal to the id we click on will be passed on\n//  meaning that the one that has the same id will be deleted from the UI\n// We will also delete the item from the database separately\nexport default function reduce(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_ITEMS:return _objectSpread(_objectSpread({},state),{},{items:action.payload,loading:false});case DELETE_ITEM:return _objectSpread(_objectSpread({},state),{},{items:state.items.filter(function(item){return item._id!==action.payload;})});case ADD_ITEM:return _objectSpread(_objectSpread({},state),{},{items:[action.payload].concat(_toConsumableArray(state.items))});case ITEMS_LOADING:return _objectSpread(_objectSpread({},state),{},{loading:true});default:return state;}}","map":{"version":3,"sources":["/Users/colinjohnson/Desktop/35LFinalProj/CS35lFinalProj/client/src/reducers/itemReducer.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","initialState","items","loading","reduce","state","action","type","payload","filter","item","_id"],"mappings":"iXAAA,OACEA,SADF,CAEEC,QAFF,CAGEC,WAHF,CAIEC,aAJF,KAKO,kBALP,CAOA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,OAAO,CAAE,KAFU,CAArB,CAKA;AACA;AACA;AACA;AAEA,cAAe,SAASC,CAAAA,MAAT,EAA8C,IAA9BC,CAAAA,KAA8B,2DAAtBJ,YAAsB,IAARK,CAAAA,MAAQ,2CAC3D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,SAAL,CACE,sCACKQ,KADL,MAEEH,KAAK,CAAEI,MAAM,CAACE,OAFhB,CAGEL,OAAO,CAAE,KAHX,GAKF,IAAKJ,CAAAA,WAAL,CACE,sCACKM,KADL,MAEEH,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAA9B,EAAnB,CAFT,GAIF,IAAKV,CAAAA,QAAL,CACE,sCACKO,KADL,MAEEH,KAAK,EAAGI,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACH,KAA5B,EAFP,GAIF,IAAKF,CAAAA,aAAL,CACE,sCACKK,KADL,MAEEF,OAAO,CAAE,IAFX,GAIF,QACE,MAAOE,CAAAA,KAAP,CAvBJ,CAyBD","sourcesContent":["import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  loading: false,\n};\n\n//DELETE_ITEM adjusts the items in the state of the Exercise List\n//  and filters them so that if the item id is not equal to the id we click on will be passed on\n//  meaning that the one that has the same id will be deleted from the UI\n// We will also delete the item from the database separately\n\nexport default function reduce(state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false,\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter((item) => item._id !== action.payload),\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [action.payload, ...state.items],\n      };\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}